{"ast":null,"code":"import _objectSpread from\"/var/www/html/manishLiveWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{Grid}from'@material-ui/core';import React,{useState,useEffect}from'react';import{useForm,Form}from'../../components/useForm';import Controls from'../../components/controls/Controls';import*as employeeService from\"../../services/employeeService\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var genderItems=[{id:'male',title:'Male'},{id:'Female',title:'Female'},{id:'other',title:'other'}];var initialFValues={id:0,fullName:'',email:'',mobile:'',city:'',gender:'male',departmentId:'',hireDate:new Date(),isPermanent:false};export default function EmployeesForm(props){var addOrEdit=props.addOrEdit,recordForEdit=props.recordForEdit;var validate=function validate(){var fieldValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:values;var temp=_objectSpread({},errors);if('fullName'in fieldValues)temp.fullName=fieldValues.fullName?\"\":\"This field is required.\";if('email'in fieldValues)temp.email=/$^|.+@.+..+/.test(fieldValues.email)?\"\":\"Email is not valid.\";if('mobile'in fieldValues)temp.mobile=fieldValues.mobile.length>9?\"\":\"Minimum 10 numbers required.\";if('departmentId'in fieldValues)temp.departmentId=fieldValues.departmentId.length!=0?\"\":\"This field is required.\";setErrors(_objectSpread({},temp));if(fieldValues==values)return Object.values(temp).every(function(x){return x==\"\";});};var _useForm=useForm(initialFValues,true,validate),values=_useForm.values,setValues=_useForm.setValues,errors=_useForm.errors,setErrors=_useForm.setErrors,handleInputChange=_useForm.handleInputChange,resetForm=_useForm.resetForm;var handleSubmit=function handleSubmit(e){e.preventDefault();if(validate()){addOrEdit(values,resetForm);}};useEffect(function(){if(recordForEdit!=null)setValues(_objectSpread({},recordForEdit));},[recordForEdit]);return/*#__PURE__*/_jsx(Form,{onSubmit:handleSubmit,children:/*#__PURE__*/_jsxs(Grid,{container:true,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Controls.Input,{name:\"fullName\",label:\"Full Name\",value:values.fullName,onChange:handleInputChange,error:errors.fullName}),/*#__PURE__*/_jsx(Controls.Input,{name:\"email\",label:\"Email\",value:values.email,onChange:handleInputChange,error:errors.email}),/*#__PURE__*/_jsx(Controls.Input,{name:\"mobile\",label:\"Mobile\",value:values.mobile,onChange:handleInputChange,error:errors.mobile}),/*#__PURE__*/_jsx(Controls.Input,{name:\"city\",label:\"City\",value:values.city,onChange:handleInputChange})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Controls.RadioGroup,{name:\"gender\",label:\"Gender\",values:values.gender,onChange:handleInputChange,items:genderItems}),/*#__PURE__*/_jsx(Controls.Select,{name:\"departmentId\",label:\"Department\",value:values.departmentId,onChange:handleInputChange,options:employeeService.getDepartmentCollection(),error:errors.departmentId}),/*#__PURE__*/_jsx(Controls.DatePicker,{name:\"hireDate\",label:\"Hire Date\",value:values.hireDate,onChange:handleInputChange}),/*#__PURE__*/_jsx(Controls.Checkbox,{name:\"isPermanent\",label:\"Permanent Employee\",value:values.isPermanent,onChange:handleInputChange}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Controls.Button,{type:\"submit\",text:\"Submit\"}),/*#__PURE__*/_jsx(Controls.Button,{text:\"Reset\",color:\"default\",onClick:resetForm})]})]})]})});}","map":{"version":3,"sources":["/var/www/html/manishLiveWebsite/src/pages/Employees/EmployeesForm.js"],"names":["Grid","React","useState","useEffect","useForm","Form","Controls","employeeService","genderItems","id","title","initialFValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeesForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","getDepartmentCollection"],"mappings":"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","sourcesContent":["import { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react'\nimport { useForm, Form } from '../../components/useForm';\nimport Controls from '../../components/controls/Controls';\nimport * as employeeService from \"../../services/employeeService\";\n\nconst genderItems = [\n    {id:'male',title:'Male'},\n    {id:'Female',title:'Female'},\n    {id:'other',title:'other'},\n]\n\nconst initialFValues = {\n    id :0,\n    fullName:'',\n    email:'',\n    mobile:'',\n    city:'',\n    gender:'male',\n    departmentId:'',\n    hireDate:new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeesForm(props){\n\n    const {addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName?\"\":\"This field is required.\"\n        if('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email)?\"\":\"Email is not valid.\"\n        if('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length>9?\"\":\"Minimum 10 numbers required.\"\n        if('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ?\"\":\"This field is required.\"\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n    \n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => { \n        e.preventDefault()\n        if (validate()){\n            addOrEdit(values,resetForm);\n        }\n    }\n\n    useEffect(()=>{\n        if (recordForEdit != null)\n        setValues({\n            ...recordForEdit\n        })\n    },[recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                   <Controls.Input \n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange= {handleInputChange}\n                        error={errors.email}\n                   />\n                   <Controls.Input \n                        name=\"mobile\"\n                        label=\"Mobile\"\n                        value={values.mobile}\n                        onChange= {handleInputChange}\n                        error={errors.mobile}\n                   />\n                   <Controls.Input \n                        name=\"city\"\n                        label=\"City\"\n                        value={values.city}\n                        onChange= {handleInputChange}\n                   />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup \n                        name=\"gender\"\n                        label=\"Gender\"\n                        values={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n                    <div>\n                        <Controls.Button\n                         type=\"submit\"\n                         text=\"Submit\" />\n                        <Controls.Button\n                         text=\"Reset\"\n                         color=\"default\" \n                         onClick={resetForm}/>\n                    </div>\n\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}