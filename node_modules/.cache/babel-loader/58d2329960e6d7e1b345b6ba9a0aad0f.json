{"ast":null,"code":"var _jsxFileName = \"/var/www/html/complete_mui_system/src/pages/Employees/EmployeesForm.js\",\n    _s = $RefreshSig$();\n\nimport { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react';\nimport { useForm, Form } from '../../components/useForm';\nimport Controls from '../../components/controls/Controls';\nimport * as employeeService from \"../../services/employeeService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genderItems = [{\n  id: 'male',\n  title: 'Male'\n}, {\n  id: 'Female',\n  title: 'Female'\n}, {\n  id: 'other',\n  title: 'other'\n}];\nconst initialFValues = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false\n};\nexport default function EmployeesForm(props) {\n  _s();\n\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    if ('departmentId' in fieldValues) temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {}, [rec]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"fullName\",\n          label: \"Full Name\",\n          value: values.fullName,\n          onChange: handleInputChange,\n          error: errors.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"email\",\n          label: \"Email\",\n          value: values.email,\n          onChange: handleInputChange,\n          error: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"mobile\",\n          label: \"Mobile\",\n          value: values.mobile,\n          onChange: handleInputChange,\n          error: errors.mobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Input, {\n          name: \"city\",\n          label: \"City\",\n          value: values.city,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(Controls.RadioGroup, {\n          name: \"gender\",\n          label: \"Gender\",\n          values: values.gender,\n          onChange: handleInputChange,\n          items: genderItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Select, {\n          name: \"departmentId\",\n          label: \"Department\",\n          value: values.departmentId,\n          onChange: handleInputChange,\n          options: employeeService.getDepartmentCollection(),\n          error: errors.departmentId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.DatePicker, {\n          name: \"hireDate\",\n          label: \"Hire Date\",\n          value: values.hireDate,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Checkbox, {\n          name: \"isPermanent\",\n          label: \"Permanent Employee\",\n          value: values.isPermanent,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Controls.Button, {\n            type: \"submit\",\n            text: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n            text: \"Reset\",\n            color: \"default\",\n            onClick: resetForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmployeesForm, \"NbybQkXiDLVvw8T/tZ7oN0nTjFE=\", false, function () {\n  return [useForm];\n});\n\n_c = EmployeesForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeesForm\");","map":{"version":3,"sources":["/var/www/html/complete_mui_system/src/pages/Employees/EmployeesForm.js"],"names":["Grid","React","useState","useEffect","useForm","Form","Controls","employeeService","genderItems","id","title","initialFValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeesForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault","rec","getDepartmentCollection"],"mappings":"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","sourcesContent":["import { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react'\nimport { useForm, Form } from '../../components/useForm';\nimport Controls from '../../components/controls/Controls';\nimport * as employeeService from \"../../services/employeeService\";\n\nconst genderItems = [\n    {id:'male',title:'Male'},\n    {id:'Female',title:'Female'},\n    {id:'other',title:'other'},\n]\n\nconst initialFValues = {\n    id :0,\n    fullName:'',\n    email:'',\n    mobile:'',\n    city:'',\n    gender:'male',\n    departmentId:'',\n    hireDate:new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeesForm(props){\n\n    const {addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName?\"\":\"This field is required.\"\n        if('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email)?\"\":\"Email is not valid.\"\n        if('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length>9?\"\":\"Minimum 10 numbers required.\"\n        if('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ?\"\":\"This field is required.\"\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n    \n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => { \n        e.preventDefault()\n        if (validate()){\n            addOrEdit(values,resetForm);\n        }\n    }\n\n    useEffect(()=>{},[rec])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                   <Controls.Input \n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange= {handleInputChange}\n                        error={errors.email}\n                   />\n                   <Controls.Input \n                        name=\"mobile\"\n                        label=\"Mobile\"\n                        value={values.mobile}\n                        onChange= {handleInputChange}\n                        error={errors.mobile}\n                   />\n                   <Controls.Input \n                        name=\"city\"\n                        label=\"City\"\n                        value={values.city}\n                        onChange= {handleInputChange}\n                   />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup \n                        name=\"gender\"\n                        label=\"Gender\"\n                        values={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n                    <div>\n                        <Controls.Button\n                         type=\"submit\"\n                         text=\"Submit\" />\n                        <Controls.Button\n                         text=\"Reset\"\n                         color=\"default\" \n                         onClick={resetForm}/>\n                    </div>\n\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}"]},"metadata":{},"sourceType":"module"}