{"ast":null,"code":"var _jsxFileName = \"/var/www/html/complete_mui_system/src/components/controls/useTable.js\";\nimport { makeStyles, Table, TableCell, TableHead, TableRow } from '@material-ui/core';\nimport React from 'react';\nimport { insertEmployee } from '../../services/employeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    marginTop: theme.spacing(3),\n    '& thead th': {\n      fontWeight: '600',\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.primary.light\n    },\n    '& tbody td': {\n      fontWeight: '300'\n    },\n    '& tbody tr:hover': {\n      backgroundColor: '#fffbf2',\n      cursor: 'pointer'\n    }\n  }\n}));\nexport default function useTable(records, headCells) {\n  const TblContainer = props => /*#__PURE__*/_jsxDEV(Table, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n\n  const TblHead = props => {\n    return /*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n          children: headCell.label\n        }, headCell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this);\n  };\n\n  return {\n    TblContainer,\n    TblHead\n  };\n}","map":{"version":3,"sources":["/var/www/html/complete_mui_system/src/components/controls/useTable.js"],"names":["makeStyles","Table","TableCell","TableHead","TableRow","React","insertEmployee","useStyles","theme","table","marginTop","spacing","fontWeight","color","palette","primary","main","backgroundColor","light","cursor","useTable","records","headCells","TblContainer","props","children","TblHead","map","headCell","label","id"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,KAArB,EAA4BC,SAA5B,EAAuCC,SAAvC,EAAkDC,QAAlD,QAAkE,mBAAlE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,gCAA/B;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAACQ,KAAK,KAAK;AACnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADR;AAEH,kBAAc;AACVC,MAAAA,UAAU,EAAE,KADF;AAEVC,MAAAA,KAAK,EAAEL,KAAK,CAACM,OAAN,CAAcC,OAAd,CAAsBC,IAFnB;AAGVC,MAAAA,eAAe,EAAET,KAAK,CAACM,OAAN,CAAcC,OAAd,CAAsBG;AAH7B,KAFX;AAOH,kBAAc;AACVN,MAAAA,UAAU,EAAE;AADF,KAPX;AAUH,wBAAoB;AAChBK,MAAAA,eAAe,EAAE,SADD;AAEhBE,MAAAA,MAAM,EAAE;AAFQ;AAVjB;AAD4B,CAAL,CAAN,CAA5B;AAkBA,eAAe,SAASC,QAAT,CAAkBC,OAAlB,EAA0BC,SAA1B,EAAqC;AAIhD,QAAMC,YAAY,GAAGC,KAAK,iBACtB,QAAC,KAAD;AAAA,cACKA,KAAK,CAACC;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,QAAMC,OAAO,GAAGF,KAAK,IAAI;AACrB,wBAAQ,QAAC,SAAD;AAAA,6BACJ,QAAC,QAAD;AAAA,kBACKF,SAAS,CAACK,GAAV,CAAcC,QAAQ,iBAAK,QAAC,SAAD;AAAA,oBACvBA,QAAQ,CAACC;AADc,WAAgBD,QAAQ,CAACE,EAAzB;AAAA;AAAA;AAAA;AAAA,gBAA3B;AADL;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAAR;AAOH,GARD;;AAUA,SAAO;AACHP,IAAAA,YADG;AAEHG,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import { makeStyles, Table, TableCell, TableHead, TableRow } from '@material-ui/core'\nimport React from 'react'\nimport { insertEmployee } from '../../services/employeeService'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records,headCells) {\n    \n\n    \n    const TblContainer = props => (\n        <Table>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n        return (<TableHead>\n            <TableRow>\n                {headCells.map(headCell => (<TableCell key={headCell.id}>\n                    {headCell.label}\n                </TableCell>))}\n            </TableRow>\n        </TableHead>)\n    }\n\n    return {\n        TblContainer,\n        TblHead\n    }\n}"]},"metadata":{},"sourceType":"module"}