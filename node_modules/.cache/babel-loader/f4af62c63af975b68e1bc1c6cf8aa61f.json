{"ast":null,"code":"import _objectSpread from\"/var/www/html/manishLiveWebsite/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var KEYS={employees:'employees',employeeId:'employeeId'};export var getDepartmentCollection=function getDepartmentCollection(){return[{id:'1',title:'Development'},{id:'2',title:'Marketing'},{id:'3',title:'Accounting'},{id:'4',title:'HR'}];};export function insertEmployee(data){var employees=getAllEmployees();data['id']=generateEmployeeId();employees.push(data);localStorage.setItem(KEYS.employees,JSON.stringify(employees));}export function updateEmployee(data){var employees=getAllEmployees();var recordIndex=employees.findIndex(function(x){return x.id==data.id;});employees[recordIndex]=_objectSpread({},data);localStorage.setItem(KEYS.employees,JSON.stringify(employees));}export function generateEmployeeId(){if(localStorage.getItem(KEYS.employeeId)==null)localStorage.setItem(KEYS.employeeId,'0');var id=parseInt(localStorage.getItem(KEYS.employeeId));localStorage.setItem(KEYS.employeeId,(++id).toString());return id;}export function getAllEmployees(){if(localStorage.getItem(KEYS.employees)==null)localStorage.setItem(KEYS.employees,JSON.stringify([]));var employees=JSON.parse(localStorage.getItem(KEYS.employees));var departments=getDepartmentCollection();//This will return updated list of employee with the new property deparment.\nreturn employees.map(function(x){return _objectSpread(_objectSpread({},x),{},{department:departments[x.departmentId-1].title});});}","map":{"version":3,"sources":["/var/www/html/manishLiveWebsite/src/services/employeeService.js"],"names":["KEYS","employees","employeeId","getDepartmentCollection","id","title","insertEmployee","data","getAllEmployees","generateEmployeeId","push","localStorage","setItem","JSON","stringify","updateEmployee","recordIndex","findIndex","x","getItem","parseInt","toString","parse","departments","map","department","departmentId"],"mappings":"qJAAA,GAAMA,CAAAA,IAAI,CAAG,CACTC,SAAS,CAAC,WADD,CAETC,UAAU,CAAC,YAFF,CAAb,CAKA,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,SAAM,CACzC,CAAEC,EAAE,CAAE,GAAN,CAAWC,KAAK,CAAE,aAAlB,CADyC,CAEzC,CAAED,EAAE,CAAE,GAAN,CAAWC,KAAK,CAAE,WAAlB,CAFyC,CAGzC,CAAED,EAAE,CAAE,GAAN,CAAWC,KAAK,CAAE,YAAlB,CAHyC,CAIzC,CAACD,EAAE,CAAE,GAAL,CAAUC,KAAK,CAAE,IAAjB,CAJyC,CAAN,EAAhC,CAOP,MAAO,SAASC,CAAAA,cAAT,CAAwBC,IAAxB,CAA8B,CACjC,GAAIN,CAAAA,SAAS,CAACO,eAAe,EAA7B,CACAD,IAAI,CAAC,IAAD,CAAJ,CAAaE,kBAAkB,EAA/B,CACAR,SAAS,CAACS,IAAV,CAAeH,IAAf,EACAI,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,SAA1B,CAAqCY,IAAI,CAACC,SAAL,CAAeb,SAAf,CAArC,EACH,CAED,MAAO,SAASc,CAAAA,cAAT,CAAwBR,IAAxB,CAA8B,CACjC,GAAIN,CAAAA,SAAS,CAAGO,eAAe,EAA/B,CACA,GAAIQ,CAAAA,WAAW,CAAGf,SAAS,CAACgB,SAAV,CAAoB,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACd,EAAF,EAAQG,IAAI,CAACH,EAAjB,EAArB,CAAlB,CACAH,SAAS,CAACe,WAAD,CAAT,kBAA8BT,IAA9B,EACAI,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,SAA1B,CAAqCY,IAAI,CAACC,SAAL,CAAeb,SAAf,CAArC,EACH,CAED,MAAO,SAASQ,CAAAA,kBAAT,EAA6B,CAChC,GAAIE,YAAY,CAACQ,OAAb,CAAqBnB,IAAI,CAACE,UAA1B,GAAyC,IAA7C,CACIS,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACE,UAA1B,CAAsC,GAAtC,EACJ,GAAIE,CAAAA,EAAE,CAAGgB,QAAQ,CAACT,YAAY,CAACQ,OAAb,CAAqBnB,IAAI,CAACE,UAA1B,CAAD,CAAjB,CACAS,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACE,UAA1B,CAAsC,CAAC,EAAEE,EAAH,EAAOiB,QAAP,EAAtC,EACA,MAAOjB,CAAAA,EAAP,CACH,CAED,MAAO,SAASI,CAAAA,eAAT,EAA2B,CAC9B,GAAIG,YAAY,CAACQ,OAAb,CAAqBnB,IAAI,CAACC,SAA1B,GAAwC,IAA5C,CACIU,YAAY,CAACC,OAAb,CAAqBZ,IAAI,CAACC,SAA1B,CAAqCY,IAAI,CAACC,SAAL,CAAe,EAAf,CAArC,EACJ,GAAIb,CAAAA,SAAS,CAAGY,IAAI,CAACS,KAAL,CAAWX,YAAY,CAACQ,OAAb,CAAqBnB,IAAI,CAACC,SAA1B,CAAX,CAAhB,CACA,GAAIsB,CAAAA,WAAW,CAAGpB,uBAAuB,EAAzC,CACA;AACA,MAAOF,CAAAA,SAAS,CAACuB,GAAV,CAAc,SAAAN,CAAC,wCACfA,CADe,MAElBO,UAAU,CAAGF,WAAW,CAACL,CAAC,CAACQ,YAAF,CAAe,CAAhB,CAAX,CAA8BrB,KAFzB,IAAf,CAAP,CAIH","sourcesContent":["const KEYS = {\n    employees:'employees',\n    employeeId:'employeeId'\n}\n\nexport const getDepartmentCollection = () =>([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    {id: '4', title: 'HR'},\n])\n\nexport function insertEmployee(data) {\n    let employees=getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId(){\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    let departments = getDepartmentCollection();\n    //This will return updated list of employee with the new property deparment.\n    return employees.map(x => ({\n        ...x,\n        department : departments[x.departmentId-1].title\n    }))\n}"]},"metadata":{},"sourceType":"module"}