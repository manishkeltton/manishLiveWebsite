{"ast":null,"code":"var _jsxFileName = \"/var/www/html/complete_mui_system/src/components/controls/useTable.js\",\n    _s = $RefreshSig$();\n\nimport { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { insertEmployee } from '../../services/employeeService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    marginTop: theme.spacing(3),\n    '& thead th': {\n      fontWeight: '600',\n      color: theme.palette.primary.main,\n      backgroundColor: theme.palette.primary.light\n    },\n    '& tbody td': {\n      fontWeight: '300'\n    },\n    '& tbody tr:hover': {\n      backgroundColor: '#fffbf2',\n      cursor: 'pointer'\n    }\n  }\n}));\nexport default function useTable(records, headCells) {\n  _s();\n\n  const classes = useStyles();\n  const pages = [5, 10, 25];\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(pages[page]);\n  const [order, setOrder] = useState();\n  const [orderBy, setOrderBy] = useState();\n\n  const TblContainer = props => /*#__PURE__*/_jsxDEV(Table, {\n    className: classes.table,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n\n  const TblHead = props => {\n    const handleSortRequest = cellId;\n    return /*#__PURE__*/_jsxDEV(TableHead, {\n      children: /*#__PURE__*/_jsxDEV(TableRow, {\n        children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n          children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n            onClick: () => {\n              handleSortRequest(headCell.id);\n            },\n            children: headCell.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this)\n        }, headCell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const TblPagination = () => /*#__PURE__*/_jsxDEV(TablePagination, {\n    component: \"div\",\n    page: page,\n    rowsPerPageOptions: pages,\n    rowsPerPage: rowsPerPage,\n    count: records.length,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 34\n  }, this);\n\n  const recordsAfterPagingAndSorting = () => {\n    return records.slice(page * rowsPerPage, (page + 1) * rowsPerPage);\n  };\n\n  return {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  };\n}\n\n_s(useTable, \"nz037IqDTMspoSTNFmNg5caYrrU=\", false, function () {\n  return [useStyles];\n});","map":{"version":3,"sources":["/var/www/html/complete_mui_system/src/components/controls/useTable.js"],"names":["makeStyles","Table","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","React","useState","insertEmployee","useStyles","theme","table","marginTop","spacing","fontWeight","color","palette","primary","main","backgroundColor","light","cursor","useTable","records","headCells","classes","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","TblContainer","props","children","TblHead","handleSortRequest","cellId","map","headCell","id","label","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","TblPagination","length","recordsAfterPagingAndSorting","slice"],"mappings":"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","sourcesContent":["import { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { insertEmployee } from '../../services/employeeService'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records,headCells) {\n    \n    const classes = useStyles();\n\n    const pages =[5, 10, 25]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage]=useState(pages[page])\n    const [order,setOrder]=useState()\n    const [orderBy,setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId\n\n        return (<TableHead>\n            <TableRow>\n                {headCells.map(headCell => (<TableCell key={headCell.id}>\n                    <TableSortLabel\n                    onClick = { () => {handleSortRequest(headCell.id)}}>\n                        {headCell.label}\n                    </TableSortLabel>\n                </TableCell>))}\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value,10))\n        setPage(0)\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\" \n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage = {handleChangeRowsPerPage}\n    />)\n\n    const recordsAfterPagingAndSorting = () => {\n        return records.slice(page*rowsPerPage,(page+1)*rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}"]},"metadata":{},"sourceType":"module"}