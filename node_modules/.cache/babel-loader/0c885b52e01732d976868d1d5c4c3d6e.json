{"ast":null,"code":"var _jsxFileName = \"/var/www/html/manishLiveWebsite/src/pages/Employees/Employees.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport EmployeesForm from './EmployeesForm';\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport PageHeader from '../../components/PageHeader';\nimport { InputAdornment, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar } from '@material-ui/core';\nimport useTable from '../../components/controls/useTable';\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from '../../components/controls/Controls';\nimport Search from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from '../../components/controls/Popup';\nimport EditOutlined from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Notification from '../../components/controls/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  pageContent: {\n    margin: theme.spacing(5),\n    padding: theme.spacing(3)\n  },\n  searchInput: {\n    width: '75%'\n  },\n  newButton: {\n    position: 'absolute',\n    right: '10px'\n  }\n}));\nconst headCells = [{\n  id: 'fullName',\n  label: 'Employee Name'\n}, {\n  id: 'email',\n  label: 'Email Address (personal)'\n}, {\n  id: 'mobile',\n  label: 'Mobile Number'\n}, {\n  id: 'deparment',\n  label: 'Department',\n  disableSorting: true\n}, {\n  id: 'actions',\n  label: 'Actions',\n  disableSorting: true\n}];\nexport default function Employees() {\n  _s();\n\n  const classes = useStyles();\n  const [recordForEdit, setRecordForEdit] = useState(null);\n  const [records, setRecords] = useState(employeeService.getAllEmployees());\n  const [filterFn, setfilterFn] = useState({\n    fn: items => {\n      return items;\n    }\n  });\n  const [openPopup, setOpenPopup] = useState(false);\n  const [notify, setNotify] = useState({\n    isOpen: false,\n    message: '',\n    type: ''\n  });\n  const {\n    TblContainer,\n    TblHead,\n    TblPagination,\n    recordsAfterPagingAndSorting\n  } = useTable(records, headCells, filterFn);\n\n  const handleSearch = e => {\n    let target = e.target;\n    setfilterFn({\n      fn: items => {\n        if (target.value == \"\") return items;else return items.filter(x => x.fullName.toLowerCase().includes(target.value));\n      }\n    });\n  };\n\n  const addOrEdit = (employee, resetForm) => {\n    if (employee.id == 0) employeeService.insertEmployee(employee);else employeeService.updateEmployee(employee);\n    resetForm();\n    setRecordForEdit(null);\n    setOpenPopup(false);\n    setRecords(employeeService.getAllEmployees());\n    setNotify({\n      isOpen: true,\n      message: 'Submitted Successful'\n    });\n  };\n\n  const openInPopup = item => {\n    setRecordForEdit(item);\n    setOpenPopup(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n      title: \"New Employee\",\n      subTitle: \"Form design with validation\",\n      icon: /*#__PURE__*/_jsxDEV(PeopleOutlineTwoToneIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.pageContent,\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Controls.Input, {\n          label: \"Search Employees\",\n          className: classes.searchInput,\n          InputProps: {\n            startAdorment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this)\n          },\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Controls.Button, {\n          text: \"Add New\",\n          variant: \"outlined\",\n          className: classes.newButton,\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 30\n          }, this),\n          onClick: () => {\n            setOpenPopup(true);\n            setRecordForEdit(null);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TblContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TblHead, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: recordsAfterPagingAndSorting().map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.fullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                color: \"primary\",\n                onClick: () => {\n                  openInPopup(item);\n                },\n                children: /*#__PURE__*/_jsxDEV(EditOutlined, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Controls.ActionButton, {\n                color: \"secondary\",\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n                  fontSize: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 39\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 26\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TblPagination, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      title: \"Employee Form\",\n      openPopup: openPopup,\n      setOpenPopup: setOpenPopup,\n      children: /*#__PURE__*/_jsxDEV(EmployeesForm, {\n        recordForEdit: recordForEdit,\n        addOrEdit: addOrEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notify: notify,\n      setNotify: setNotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Employees, \"Se15FIs2L0bcnRjVClyhOgiH9uY=\", false, function () {\n  return [useStyles, useTable];\n});\n\n_c = Employees;\n\nvar _c;\n\n$RefreshReg$(_c, \"Employees\");","map":{"version":3,"sources":["/var/www/html/manishLiveWebsite/src/pages/Employees/Employees.js"],"names":["React","useState","EmployeesForm","PeopleOutlineTwoToneIcon","PageHeader","InputAdornment","makeStyles","Paper","TableBody","TableCell","TableRow","Toolbar","useTable","employeeService","Controls","Search","AddIcon","Popup","EditOutlined","CloseIcon","Notification","useStyles","theme","pageContent","margin","spacing","padding","searchInput","width","newButton","position","right","headCells","id","label","disableSorting","Employees","classes","recordForEdit","setRecordForEdit","records","setRecords","getAllEmployees","filterFn","setfilterFn","fn","items","openPopup","setOpenPopup","notify","setNotify","isOpen","message","type","TblContainer","TblHead","TblPagination","recordsAfterPagingAndSorting","handleSearch","e","target","value","filter","x","fullName","toLowerCase","includes","addOrEdit","employee","resetForm","insertEmployee","updateEmployee","openInPopup","item","startAdorment","map","email","mobile","department"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,KAArC,EAA4CC,SAA5C,EAAuDC,SAAvD,EAAkEC,QAAlE,EAA4EC,OAA5E,QAA2F,mBAA3F;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,eAAZ,MAAiC,gCAAjC;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,wCAAzB;;;AAEA,MAAMC,SAAS,GAAGf,UAAU,CAACgB,KAAK,KAAI;AAClCC,EAAAA,WAAW,EAAC;AACRC,IAAAA,MAAM,EAACF,KAAK,CAACG,OAAN,CAAc,CAAd,CADC;AAERC,IAAAA,OAAO,EAACJ,KAAK,CAACG,OAAN,CAAc,CAAd;AAFA,GADsB;AAKlCE,EAAAA,WAAW,EAAC;AACRC,IAAAA,KAAK,EAAC;AADE,GALsB;AAQlCC,EAAAA,SAAS,EAAG;AACRC,IAAAA,QAAQ,EAAC,UADD;AAERC,IAAAA,KAAK,EAAC;AAFE;AARsB,CAAJ,CAAN,CAA5B;AAcA,MAAMC,SAAS,GAAG,CACd;AAACC,EAAAA,EAAE,EAAC,UAAJ;AAAeC,EAAAA,KAAK,EAAC;AAArB,CADc,EAEd;AAACD,EAAAA,EAAE,EAAC,OAAJ;AAAYC,EAAAA,KAAK,EAAC;AAAlB,CAFc,EAGd;AAACD,EAAAA,EAAE,EAAC,QAAJ;AAAaC,EAAAA,KAAK,EAAC;AAAnB,CAHc,EAId;AAACD,EAAAA,EAAE,EAAC,WAAJ;AAAgBC,EAAAA,KAAK,EAAC,YAAtB;AAAmCC,EAAAA,cAAc,EAAC;AAAlD,CAJc,EAKd;AAACF,EAAAA,EAAE,EAAC,SAAJ;AAAeC,EAAAA,KAAK,EAAC,SAArB;AAA+BC,EAAAA,cAAc,EAAC;AAA9C,CALc,CAAlB;AAQA,eAAe,SAASC,SAAT,GAAoB;AAAA;;AAE/B,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM,CAACiB,aAAD,EAAgBC,gBAAhB,IAAoCtC,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAM,CAACuC,OAAD,EAASC,UAAT,IAAuBxC,QAAQ,CAACY,eAAe,CAAC6B,eAAhB,EAAD,CAArC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B3C,QAAQ,CAAC;AAAE4C,IAAAA,EAAE,EAAEC,KAAK,IAAI;AAAE,aAAOA,KAAP;AAAe;AAAhC,GAAD,CAAxC;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4B/C,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACgD,MAAD,EAASC,SAAT,IAAsBjD,QAAQ,CAAC;AAACkD,IAAAA,MAAM,EAAC,KAAR;AAAeC,IAAAA,OAAO,EAAC,EAAvB;AAA2BC,IAAAA,IAAI,EAAC;AAAhC,GAAD,CAApC;AAEA,QAAM;AACFC,IAAAA,YADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,aAHE;AAIFC,IAAAA;AAJE,MAKF7C,QAAQ,CAAC4B,OAAD,EAASR,SAAT,EAAmBW,QAAnB,CALZ;;AAOA,QAAMe,YAAY,GAAGC,CAAC,IAAK;AACvB,QAAIC,MAAM,GAAGD,CAAC,CAACC,MAAf;AACAhB,IAAAA,WAAW,CAAC;AACRC,MAAAA,EAAE,EAAEC,KAAK,IAAI;AACT,YAAGc,MAAM,CAACC,KAAP,IAAgB,EAAnB,EACI,OAAOf,KAAP,CADJ,KAGI,OAAOA,KAAK,CAACgB,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACC,QAAF,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCN,MAAM,CAACC,KAAzC,CAAlB,CAAP;AACP;AANO,KAAD,CAAX;AAQH,GAVD;;AAYA,QAAMM,SAAS,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACvC,QAAID,QAAQ,CAACnC,EAAT,IAAe,CAAnB,EACIpB,eAAe,CAACyD,cAAhB,CAA+BF,QAA/B,EADJ,KAGIvD,eAAe,CAAC0D,cAAhB,CAA+BH,QAA/B;AACAC,IAAAA,SAAS;AACT9B,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAS,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAP,IAAAA,UAAU,CAAC5B,eAAe,CAAC6B,eAAhB,EAAD,CAAV;AACAQ,IAAAA,SAAS,CAAC;AACNC,MAAAA,MAAM,EAAC,IADD;AAENC,MAAAA,OAAO,EAAC;AAFF,KAAD,CAAT;AAIP,GAbD;;AAeA,QAAMoB,WAAW,GAAGC,IAAI,IAAI;AACxBlC,IAAAA,gBAAgB,CAACkC,IAAD,CAAhB;AACAzB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,GAHD;;AAKA,sBACA;AAAA,4BACI,QAAC,UAAD;AACA,MAAA,KAAK,EAAC,cADN;AAEA,MAAA,QAAQ,EAAC,6BAFT;AAGA,MAAA,IAAI,eAAI,QAAC,wBAAD;AAA0B,QAAA,QAAQ,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEX,OAAO,CAACd,WAA1B;AAAA,8BACA,QAAC,OAAD;AAAA,gCACI,QAAC,QAAD,CAAU,KAAV;AACI,UAAA,KAAK,EAAC,kBADV;AAEI,UAAA,SAAS,EAAIc,OAAO,CAACV,WAFzB;AAGI,UAAA,UAAU,EAAE;AACR+C,YAAAA,aAAa,eAAG,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,OAAzB;AAAA,qCACZ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADY;AAAA;AAAA;AAAA;AAAA;AADR,WAHhB;AAQG,UAAA,QAAQ,EAAGhB;AARd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI,QAAC,QAAD,CAAU,MAAV;AACI,UAAA,IAAI,EAAG,SADX;AAEI,UAAA,OAAO,EAAG,UAFd;AAGI,UAAA,SAAS,EAAIrB,OAAO,CAACR,SAHzB;AAII,UAAA,SAAS,eAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAJjB;AAKI,UAAA,OAAO,EAAI,MAAM;AAAEmB,YAAAA,YAAY,CAAC,IAAD,CAAZ;AAAoBT,YAAAA,gBAAgB,CAAC,IAAD,CAAhB;AAAwB;AALnE;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAoBA,QAAC,YAAD;AAAA,gCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,SAAD;AAAA,oBAEQkB,4BAA4B,GAAGkB,GAA/B,CAAmCF,IAAI,iBAClC,QAAC,QAAD;AAAA,oCACG,QAAC,SAAD;AAAA,wBAAYA,IAAI,CAACT;AAAjB;AAAA;AAAA;AAAA;AAAA,oBADH,eAEG,QAAC,SAAD;AAAA,wBAAYS,IAAI,CAACG;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAFH,eAGG,QAAC,SAAD;AAAA,wBAAYH,IAAI,CAACI;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAHH,eAIG,QAAC,SAAD;AAAA,wBAAYJ,IAAI,CAACK;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAJH,eAKG,QAAC,SAAD;AAAA,sCACI,QAAC,QAAD,CAAU,YAAV;AACI,gBAAA,KAAK,EAAC,SADV;AAEI,gBAAA,OAAO,EAAI,MAAM;AAACN,kBAAAA,WAAW,CAACC,IAAD,CAAX;AAAkB,iBAFxC;AAAA,uCAGM,QAAC,YAAD;AAAc,kBAAA,QAAQ,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD,CAAU,YAAV;AACI,gBAAA,KAAK,EAAC,WADV;AAAA,uCAEM,QAAC,SAAD;AAAW,kBAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AAFN;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBALH;AAAA,aAAeA,IAAI,CAACxC,EAApB;AAAA;AAAA;AAAA;AAAA,kBADL;AAFR;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApBA,eA8CA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cA9CA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAsDI,QAAC,KAAD;AACI,MAAA,KAAK,EAAG,eADZ;AAEI,MAAA,SAAS,EAAIc,SAFjB;AAGI,MAAA,YAAY,EAAIC,YAHpB;AAAA,6BAKA,QAAC,aAAD;AACI,QAAA,aAAa,EAAEV,aADnB;AAEI,QAAA,SAAS,EAAE6B;AAFf;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,YAtDJ,eA+DI,QAAC,YAAD;AACI,MAAA,MAAM,EAAElB,MADZ;AAEI,MAAA,SAAS,EAAEC;AAFf;AAAA;AAAA;AAAA;AAAA,YA/DJ;AAAA,kBADA;AAsEH;;GAtHuBd,S;UAEJf,S,EAYZT,Q;;;KAdgBwB,S","sourcesContent":["import React, { useState } from 'react'\nimport EmployeesForm from './EmployeesForm';\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport PageHeader from '../../components/PageHeader';\nimport { InputAdornment, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar } from '@material-ui/core';\nimport useTable from '../../components/controls/useTable';\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from '../../components/controls/Controls';\nimport Search from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from '../../components/controls/Popup';\nimport EditOutlined from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Notification from '../../components/controls/Notification';\n\nconst useStyles = makeStyles(theme =>({\n    pageContent:{\n        margin:theme.spacing(5),\n        padding:theme.spacing(3)\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton : {\n        position:'absolute',\n        right:'10px'\n    }\n}))\n\nconst headCells = [\n    {id:'fullName',label:'Employee Name'},\n    {id:'email',label:'Email Address (personal)'},\n    {id:'mobile',label:'Mobile Number'},\n    {id:'deparment',label:'Department',disableSorting:true},\n    {id:'actions', label:'Actions',disableSorting:true}\n]\n\nexport default function Employees(){\n\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null)\n    const [records,setRecords] = useState(employeeService.getAllEmployees());\n    const [filterFn, setfilterFn] = useState({ fn: items => { return items; } })\n    const [openPopup, setOpenPopup] = useState(false);\n    const [notify, setNotify] = useState({isOpen:false, message:'', type:''})\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records,headCells,filterFn);\n\n    const handleSearch = e =>  {\n        let target = e.target;\n        setfilterFn({\n            fn: items => {\n                if(target.value == \"\")\n                    return items;\n                else \n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\n            }\n        })\n    }\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0)\n            employeeService.insertEmployee(employee)\n        else\n            employeeService.updateEmployee(employee)\n            resetForm()\n            setRecordForEdit(null)\n            setOpenPopup(false)\n            setRecords(employeeService.getAllEmployees())\n            setNotify({\n                isOpen:true,\n                message:'Submitted Successful'\n            })\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item)\n        setOpenPopup(true)\n    }\n\n    return (\n    <>\n        <PageHeader \n        title=\"New Employee\"\n        subTitle=\"Form design with validation\"\n        icon = {<PeopleOutlineTwoToneIcon fontSize='large'/>}\n        />\n        <Paper className={classes.pageContent}>\n        <Toolbar>\n            <Controls.Input\n                label=\"Search Employees\"\n                className = {classes.searchInput} \n                InputProps={{\n                    startAdorment: (<InputAdornment position=\"start\">\n                        <Search />\n                    </InputAdornment>)\n               }}\n               onChange={ handleSearch }\n            />\n            <Controls.Button \n                text = \"Add New\"\n                variant = \"outlined\"\n                className = {classes.newButton}\n                startIcon = {<AddIcon />}\n                onClick = {() => { setOpenPopup(true); setRecordForEdit(null);}}\n            />\n        </Toolbar>\n        <TblContainer>\n            <TblHead />\n            <TableBody>\n                {\n                    recordsAfterPagingAndSorting().map(item =>\n                        (<TableRow key={item.id}>\n                            <TableCell>{item.fullName}</TableCell>\n                            <TableCell>{item.email}</TableCell>\n                            <TableCell>{item.mobile}</TableCell>\n                            <TableCell>{item.department}</TableCell>\n                            <TableCell>\n                                <Controls.ActionButton\n                                    color=\"primary\"\n                                    onClick = {() => {openInPopup(item)}}>\n                                      <EditOutlined fontSize=\"small\" />\n                                </Controls.ActionButton>\n                                <Controls.ActionButton\n                                    color=\"secondary\">\n                                      <CloseIcon fontSize=\"small\" />\n                                </Controls.ActionButton>\n                            </TableCell>\n                        </TableRow>)\n                        )\n                }\n            </TableBody>\n        </TblContainer>\n        <TblPagination />\n        </Paper>\n        <Popup\n            title = \"Employee Form\"\n            openPopup = {openPopup}\n            setOpenPopup = {setOpenPopup}\n        >\n        <EmployeesForm \n            recordForEdit={recordForEdit}\n            addOrEdit={addOrEdit}/>\n        </Popup>\n        <Notification \n            notify={notify}\n            setNotify={setNotify}\n        />\n    </>\n    )\n}"]},"metadata":{},"sourceType":"module"}