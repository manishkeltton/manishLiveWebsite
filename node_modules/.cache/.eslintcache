[{"/var/www/html/manishLiveWebsite/src/index.js":"1","/var/www/html/manishLiveWebsite/src/reportWebVitals.js":"2","/var/www/html/manishLiveWebsite/src/App/App.js":"3","/var/www/html/manishLiveWebsite/src/components/Header.js":"4","/var/www/html/manishLiveWebsite/src/components/SideMenu.js":"5","/var/www/html/manishLiveWebsite/src/pages/Employees/Employees.js":"6","/var/www/html/manishLiveWebsite/src/components/PageHeader.js":"7","/var/www/html/manishLiveWebsite/src/pages/Employees/EmployeesForm.js":"8","/var/www/html/manishLiveWebsite/src/components/controls/Controls.js":"9","/var/www/html/manishLiveWebsite/src/components/controls/useTable.js":"10","/var/www/html/manishLiveWebsite/src/components/controls/Popup.js":"11","/var/www/html/manishLiveWebsite/src/services/employeeService.js":"12","/var/www/html/manishLiveWebsite/src/components/useForm.js":"13","/var/www/html/manishLiveWebsite/src/components/controls/ActionButton.js":"14","/var/www/html/manishLiveWebsite/src/components/controls/Button.js":"15","/var/www/html/manishLiveWebsite/src/components/controls/DatePicker.js":"16","/var/www/html/manishLiveWebsite/src/components/controls/Checkbox.js":"17","/var/www/html/manishLiveWebsite/src/components/controls/Select.js":"18","/var/www/html/manishLiveWebsite/src/components/controls/Input.js":"19","/var/www/html/manishLiveWebsite/src/components/controls/RadioGroup.js":"20"},{"size":461,"mtime":1613764121323,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1613558716618,"results":"23","hashOfConfig":"22"},{"size":1040,"mtime":1613711750778,"results":"24","hashOfConfig":"22"},{"size":2291,"mtime":1613646964288,"results":"25","hashOfConfig":"22"},{"size":882,"mtime":1613616336409,"results":"26","hashOfConfig":"22"},{"size":5066,"mtime":1614057261845,"results":"27","hashOfConfig":"22"},{"size":1376,"mtime":1613646636933,"results":"28","hashOfConfig":"22"},{"size":4717,"mtime":1614015749115,"results":"29","hashOfConfig":"22"},{"size":385,"mtime":1614006788455,"results":"30","hashOfConfig":"22"},{"size":3696,"mtime":1613986997272,"results":"31","hashOfConfig":"22"},{"size":1328,"mtime":1614007404245,"results":"32","hashOfConfig":"22"},{"size":1484,"mtime":1614016663570,"results":"33","hashOfConfig":"22"},{"size":1141,"mtime":1613843540237,"results":"34","hashOfConfig":"22"},{"size":873,"mtime":1614007168059,"results":"35","hashOfConfig":"22"},{"size":708,"mtime":1613843137011,"results":"36","hashOfConfig":"22"},{"size":784,"mtime":1613812136205,"results":"37","hashOfConfig":"22"},{"size":695,"mtime":1613810334971,"results":"38","hashOfConfig":"22"},{"size":904,"mtime":1613840483719,"results":"39","hashOfConfig":"22"},{"size":463,"mtime":1613985100617,"results":"40","hashOfConfig":"22"},{"size":774,"mtime":1613762970558,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"cnl7qv",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/html/manishLiveWebsite/src/index.js",[],"/var/www/html/manishLiveWebsite/src/reportWebVitals.js",[],"/var/www/html/manishLiveWebsite/src/App/App.js",[],"/var/www/html/manishLiveWebsite/src/components/Header.js",[],"/var/www/html/manishLiveWebsite/src/components/SideMenu.js",["87"],"import React from 'react'\nimport { makeStyles, withStyles } from \"@material-ui/core\";\n\n// withStyles & makeStyles\n\n// const useStyles = makeStyles({\n//     sideMenu: {\n//         display: 'flex',\n//         flexDirection: 'column',\n//         position: 'absolute',\n//         left: '0px',\n//         width: '320px',\n//         height: '100%',\n//         backgroundColor: '#253053'\n//     }\n// })\n\nconst style = {\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        left: '0px',\n        width: '320px',\n        height: '100%',\n        backgroundColor: '#253053'\n    }\n}\n\n\n\nconst SideMenu = (props) => {\n\n    const { classes } = props;\n    //const classes = useStyles();\n    //console.log(classes);\n\n    return (\n        <div className={classes.sideMenu}>\n\n        </div>\n    )\n}\n\nexport default withStyles(style)(SideMenu);","/var/www/html/manishLiveWebsite/src/pages/Employees/Employees.js",["88","89"],"import React, { useState } from 'react'\nimport EmployeesForm from './EmployeesForm';\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport PageHeader from '../../components/PageHeader';\nimport { InputAdornment, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar } from '@material-ui/core';\nimport useTable from '../../components/controls/useTable';\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from '../../components/controls/Controls';\nimport Search from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from '../../components/controls/Popup';\nimport EditOutlined from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme =>({\n    pageContent:{\n        margin:theme.spacing(5),\n        padding:theme.spacing(3)\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton : {\n        position:'absolute',\n        right:'10px'\n    }\n}))\n\nconst headCells = [\n    {id:'fullName',label:'Employee Name'},\n    {id:'email',label:'Email Address (personal)'},\n    {id:'mobile',label:'Mobile Number'},\n    {id:'deparment',label:'Department',disableSorting:true},\n    {id:'actions', label:'Actions',disableSorting:true}\n]\n\nexport default function Employees(){\n\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null)\n    const [records,setRecords] = useState(employeeService.getAllEmployees());\n    const [filterFn, setfilterFn] = useState({ fn: items => { return items; } })\n    const [openPopup, setOpenPopup] = useState(false);\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records,headCells,filterFn);\n\n    const handleSearch = e =>  {\n        let target = e.target;\n        setfilterFn({\n            fn: items => {\n                if(target.value == \"\")\n                    return items;\n                else \n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\n            }\n        })\n    }\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0)\n            employeeService.insertEmployee(employee)\n        else\n            employeeService.updateEmployee(employee)\n            resetForm()\n            setRecordForEdit(null)\n            setOpenPopup(false)\n            setRecords(employeeService.getAllEmployees())\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item)\n        setOpenPopup(true)\n    }\n\n    return (\n    <>\n        <PageHeader \n        title=\"New Employee\"\n        subTitle=\"Form design with validation\"\n        icon = {<PeopleOutlineTwoToneIcon fontSize='large'/>}\n        />\n        <Paper className={classes.pageContent}>\n        <Toolbar>\n            <Controls.Input\n                label=\"Search Employees\"\n                className = {classes.searchInput} \n                InputProps={{\n                    startAdorment: (<InputAdornment position=\"start\">\n                        <Search />\n                    </InputAdornment>)\n               }}\n               onChange={ handleSearch }\n            />\n            <Controls.Button \n                text = \"Add New\"\n                variant = \"outlined\"\n                className = {classes.newButton}\n                startIcon = {<AddIcon />}\n                onClick = {() => { setOpenPopup(true); setRecordForEdit(null);}}\n            />\n        </Toolbar>\n        <TblContainer>\n            <TblHead />\n            <TableBody>\n                {\n                    recordsAfterPagingAndSorting().map(item =>\n                        (<TableRow key={item.id}>\n                            <TableCell>{item.fullName}</TableCell>\n                            <TableCell>{item.email}</TableCell>\n                            <TableCell>{item.mobile}</TableCell>\n                            <TableCell>{item.department}</TableCell>\n                            <TableCell>\n                                <Controls.ActionButton\n                                    color=\"primary\"\n                                    onClick = {() => {openInPopup(item)}}>\n                                      <EditOutlined fontSize=\"small\" />\n                                </Controls.ActionButton>\n                                <Controls.ActionButton\n                                    color=\"secondary\">\n                                      <CloseIcon fontSize=\"small\" />\n                                </Controls.ActionButton>\n                            </TableCell>\n                        </TableRow>)\n                        )\n                }\n            </TableBody>\n        </TblContainer>\n        <TblPagination />\n        </Paper>\n        <Popup\n            title = \"Employee Form\"\n            openPopup = {openPopup}\n            setOpenPopup = {setOpenPopup}\n        >\n        <EmployeesForm \n            recordForEdit={recordForEdit}\n            addOrEdit={addOrEdit}/>\n        </Popup>\n    </>\n    )\n}","/var/www/html/manishLiveWebsite/src/components/PageHeader.js",[],"/var/www/html/manishLiveWebsite/src/pages/Employees/EmployeesForm.js",["90","91","92","93","94"],"import { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react'\nimport { useForm, Form } from '../../components/useForm';\nimport Controls from '../../components/controls/Controls';\nimport * as employeeService from \"../../services/employeeService\";\n\nconst genderItems = [\n    {id:'male',title:'Male'},\n    {id:'Female',title:'Female'},\n    {id:'other',title:'other'},\n]\n\nconst initialFValues = {\n    id :0,\n    fullName:'',\n    email:'',\n    mobile:'',\n    city:'',\n    gender:'male',\n    departmentId:'',\n    hireDate:new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeesForm(props){\n\n    const {addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName?\"\":\"This field is required.\"\n        if('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email)?\"\":\"Email is not valid.\"\n        if('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length>9?\"\":\"Minimum 10 numbers required.\"\n        if('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ?\"\":\"This field is required.\"\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n    \n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => { \n        e.preventDefault()\n        if (validate()){\n            addOrEdit(values,resetForm);\n        }\n    }\n\n    useEffect(()=>{\n        if (recordForEdit != null)\n        setValues({\n            ...recordForEdit\n        })\n    },[recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                   <Controls.Input \n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange= {handleInputChange}\n                        error={errors.email}\n                   />\n                   <Controls.Input \n                        name=\"mobile\"\n                        label=\"Mobile\"\n                        value={values.mobile}\n                        onChange= {handleInputChange}\n                        error={errors.mobile}\n                   />\n                   <Controls.Input \n                        name=\"city\"\n                        label=\"City\"\n                        value={values.city}\n                        onChange= {handleInputChange}\n                   />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup \n                        name=\"gender\"\n                        label=\"Gender\"\n                        values={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n                    <div>\n                        <Controls.Button\n                         type=\"submit\"\n                         text=\"Submit\" />\n                        <Controls.Button\n                         text=\"Reset\"\n                         color=\"default\" \n                         onClick={resetForm}/>\n                    </div>\n\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}","/var/www/html/manishLiveWebsite/src/components/controls/Controls.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/useTable.js",["95","96"],"import { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { insertEmployee } from '../../services/employeeService'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records,headCells,filterFn) {\n    \n    const classes = useStyles();\n\n    const pages =[5, 10, 25]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage]=useState(pages[page])\n    const [order,setOrder]=useState()\n    const [orderBy,setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const IsAsc = orderBy === cellId && order === \"asc\";\n            setOrder(IsAsc?'desc':'asc')\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell key={headCell.id}\n                        sortDirection={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting?headCell.label:\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction = {orderBy === headCell.id ? order : 'asc'}\n                            onClick = { () => {handleSortRequest(headCell.id)}}>\n                            {headCell.label}\n                        </TableSortLabel>\n                        }\n                    </TableCell>))}\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value,10))\n        setPage(0)\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\" \n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage = {handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator){\n        const stabilizedThis = array.map((e1, index) => [e1, index]);\n        stabilizedThis.sort((a,b) => {\n            const order = comparator(a[0], b[0]);\n            if (order != 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((e1) => e1[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'dsc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]){\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records),getComparator(order,orderBy))\n               .slice(page*rowsPerPage,(page+1)*rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}","/var/www/html/manishLiveWebsite/src/components/controls/Popup.js",[],"/var/www/html/manishLiveWebsite/src/services/employeeService.js",["97"],"const KEYS = {\n    employees:'employees',\n    employeeId:'employeeId'\n}\n\nexport const getDepartmentCollection = () =>([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    {id: '4', title: 'HR'},\n])\n\nexport function insertEmployee(data) {\n    let employees=getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId(){\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    let departments = getDepartmentCollection();\n    //This will return updated list of employee with the new property deparment.\n    return employees.map(x => ({\n        ...x,\n        department : departments[x.departmentId-1].title\n    }))\n}","/var/www/html/manishLiveWebsite/src/components/useForm.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/ActionButton.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Button.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/DatePicker.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Checkbox.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Select.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Input.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/RadioGroup.js",[],{"ruleId":"98","severity":1,"message":"99","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":56,"column":33,"nodeType":"104","messageId":"105","endLine":56,"endColumn":35},{"ruleId":"102","severity":1,"message":"103","line":65,"column":25,"nodeType":"104","messageId":"105","endLine":65,"endColumn":27},{"ruleId":"98","severity":1,"message":"106","line":2,"column":17,"nodeType":"100","messageId":"101","endLine":2,"endColumn":25},{"ruleId":"102","severity":1,"message":"107","line":38,"column":65,"nodeType":"104","messageId":"105","endLine":38,"endColumn":67},{"ruleId":"102","severity":1,"message":"103","line":42,"column":24,"nodeType":"104","messageId":"105","endLine":42,"endColumn":26},{"ruleId":"102","severity":1,"message":"103","line":43,"column":53,"nodeType":"104","messageId":"105","endLine":43,"endColumn":55},{"ruleId":"108","severity":1,"message":"109","line":67,"column":7,"nodeType":"110","endLine":67,"endColumn":22,"suggestions":"111"},{"ruleId":"98","severity":1,"message":"112","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":24},{"ruleId":"102","severity":1,"message":"107","line":88,"column":23,"nodeType":"104","messageId":"105","endLine":88,"endColumn":25},{"ruleId":"102","severity":1,"message":"103","line":22,"column":53,"nodeType":"104","messageId":"105","endLine":22,"endColumn":55},"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["113"],"'insertEmployee' is defined but never used.",{"desc":"114","fix":"115"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"116","text":"117"},[1862,1877],"[recordForEdit, setValues]"]