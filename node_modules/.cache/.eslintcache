[{"/var/www/html/manishLiveWebsite/src/index.js":"1","/var/www/html/manishLiveWebsite/src/reportWebVitals.js":"2","/var/www/html/manishLiveWebsite/src/App/App.js":"3","/var/www/html/manishLiveWebsite/src/components/Header.js":"4","/var/www/html/manishLiveWebsite/src/components/SideMenu.js":"5","/var/www/html/manishLiveWebsite/src/pages/Employees/Employees.js":"6","/var/www/html/manishLiveWebsite/src/components/PageHeader.js":"7","/var/www/html/manishLiveWebsite/src/pages/Employees/EmployeesForm.js":"8","/var/www/html/manishLiveWebsite/src/components/controls/Controls.js":"9","/var/www/html/manishLiveWebsite/src/components/controls/useTable.js":"10","/var/www/html/manishLiveWebsite/src/components/controls/Popup.js":"11","/var/www/html/manishLiveWebsite/src/services/employeeService.js":"12","/var/www/html/manishLiveWebsite/src/components/useForm.js":"13","/var/www/html/manishLiveWebsite/src/components/controls/ActionButton.js":"14","/var/www/html/manishLiveWebsite/src/components/controls/Button.js":"15","/var/www/html/manishLiveWebsite/src/components/controls/DatePicker.js":"16","/var/www/html/manishLiveWebsite/src/components/controls/Checkbox.js":"17","/var/www/html/manishLiveWebsite/src/components/controls/Select.js":"18","/var/www/html/manishLiveWebsite/src/components/controls/Input.js":"19","/var/www/html/manishLiveWebsite/src/components/controls/RadioGroup.js":"20","/var/www/html/manishLiveWebsite/src/components/controls/Notification.js":"21","/var/www/html/manishLiveWebsite/src/components/controls/ConfirmDialog.js":"22"},{"size":461,"mtime":1613764121323,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1613558716618,"results":"25","hashOfConfig":"24"},{"size":1040,"mtime":1613711750778,"results":"26","hashOfConfig":"24"},{"size":2291,"mtime":1613646964288,"results":"27","hashOfConfig":"24"},{"size":882,"mtime":1613616336409,"results":"28","hashOfConfig":"24"},{"size":6613,"mtime":1614081107594,"results":"29","hashOfConfig":"24"},{"size":1376,"mtime":1613646636933,"results":"30","hashOfConfig":"24"},{"size":4717,"mtime":1614015749115,"results":"31","hashOfConfig":"24"},{"size":385,"mtime":1614006788455,"results":"32","hashOfConfig":"24"},{"size":3696,"mtime":1613986997272,"results":"33","hashOfConfig":"24"},{"size":1328,"mtime":1614007404245,"results":"34","hashOfConfig":"24"},{"size":1682,"mtime":1614075340721,"results":"35","hashOfConfig":"24"},{"size":1141,"mtime":1613843540237,"results":"36","hashOfConfig":"24"},{"size":873,"mtime":1614007168059,"results":"37","hashOfConfig":"24"},{"size":708,"mtime":1613843137011,"results":"38","hashOfConfig":"24"},{"size":784,"mtime":1613812136205,"results":"39","hashOfConfig":"24"},{"size":695,"mtime":1613810334971,"results":"40","hashOfConfig":"24"},{"size":904,"mtime":1613840483719,"results":"41","hashOfConfig":"24"},{"size":463,"mtime":1613985100617,"results":"42","hashOfConfig":"24"},{"size":774,"mtime":1613762970558,"results":"43","hashOfConfig":"24"},{"size":953,"mtime":1614074818805,"results":"44","hashOfConfig":"24"},{"size":2212,"mtime":1614080944161,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"cnl7qv",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/var/www/html/manishLiveWebsite/src/index.js",[],["95","96"],"/var/www/html/manishLiveWebsite/src/reportWebVitals.js",[],"/var/www/html/manishLiveWebsite/src/App/App.js",[],"/var/www/html/manishLiveWebsite/src/components/Header.js",[],"/var/www/html/manishLiveWebsite/src/components/SideMenu.js",["97"],"import React from 'react'\nimport { makeStyles, withStyles } from \"@material-ui/core\";\n\n// withStyles & makeStyles\n\n// const useStyles = makeStyles({\n//     sideMenu: {\n//         display: 'flex',\n//         flexDirection: 'column',\n//         position: 'absolute',\n//         left: '0px',\n//         width: '320px',\n//         height: '100%',\n//         backgroundColor: '#253053'\n//     }\n// })\n\nconst style = {\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        left: '0px',\n        width: '320px',\n        height: '100%',\n        backgroundColor: '#253053'\n    }\n}\n\n\n\nconst SideMenu = (props) => {\n\n    const { classes } = props;\n    //const classes = useStyles();\n    //console.log(classes);\n\n    return (\n        <div className={classes.sideMenu}>\n\n        </div>\n    )\n}\n\nexport default withStyles(style)(SideMenu);","/var/www/html/manishLiveWebsite/src/pages/Employees/Employees.js",["98","99"],"/var/www/html/manishLiveWebsite/src/components/PageHeader.js",[],"/var/www/html/manishLiveWebsite/src/pages/Employees/EmployeesForm.js",["100","101","102","103","104"],"import { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react'\nimport { useForm, Form } from '../../components/useForm';\nimport Controls from '../../components/controls/Controls';\nimport * as employeeService from \"../../services/employeeService\";\n\nconst genderItems = [\n    {id:'male',title:'Male'},\n    {id:'Female',title:'Female'},\n    {id:'other',title:'other'},\n]\n\nconst initialFValues = {\n    id :0,\n    fullName:'',\n    email:'',\n    mobile:'',\n    city:'',\n    gender:'male',\n    departmentId:'',\n    hireDate:new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeesForm(props){\n\n    const {addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName?\"\":\"This field is required.\"\n        if('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email)?\"\":\"Email is not valid.\"\n        if('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length>9?\"\":\"Minimum 10 numbers required.\"\n        if('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ?\"\":\"This field is required.\"\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n    \n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => { \n        e.preventDefault()\n        if (validate()){\n            addOrEdit(values,resetForm);\n        }\n    }\n\n    useEffect(()=>{\n        if (recordForEdit != null)\n        setValues({\n            ...recordForEdit\n        })\n    },[recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                   <Controls.Input \n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange= {handleInputChange}\n                        error={errors.email}\n                   />\n                   <Controls.Input \n                        name=\"mobile\"\n                        label=\"Mobile\"\n                        value={values.mobile}\n                        onChange= {handleInputChange}\n                        error={errors.mobile}\n                   />\n                   <Controls.Input \n                        name=\"city\"\n                        label=\"City\"\n                        value={values.city}\n                        onChange= {handleInputChange}\n                   />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup \n                        name=\"gender\"\n                        label=\"Gender\"\n                        values={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n                    <div>\n                        <Controls.Button\n                         type=\"submit\"\n                         text=\"Submit\" />\n                        <Controls.Button\n                         text=\"Reset\"\n                         color=\"default\" \n                         onClick={resetForm}/>\n                    </div>\n\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}","/var/www/html/manishLiveWebsite/src/components/controls/Controls.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/useTable.js",["105","106"],"import { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { insertEmployee } from '../../services/employeeService'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records,headCells,filterFn) {\n    \n    const classes = useStyles();\n\n    const pages =[5, 10, 25]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage]=useState(pages[page])\n    const [order,setOrder]=useState()\n    const [orderBy,setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const IsAsc = orderBy === cellId && order === \"asc\";\n            setOrder(IsAsc?'desc':'asc')\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell key={headCell.id}\n                        sortDirection={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting?headCell.label:\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction = {orderBy === headCell.id ? order : 'asc'}\n                            onClick = { () => {handleSortRequest(headCell.id)}}>\n                            {headCell.label}\n                        </TableSortLabel>\n                        }\n                    </TableCell>))}\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value,10))\n        setPage(0)\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\" \n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage = {handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator){\n        const stabilizedThis = array.map((e1, index) => [e1, index]);\n        stabilizedThis.sort((a,b) => {\n            const order = comparator(a[0], b[0]);\n            if (order != 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((e1) => e1[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'dsc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]){\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records),getComparator(order,orderBy))\n               .slice(page*rowsPerPage,(page+1)*rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}","/var/www/html/manishLiveWebsite/src/components/controls/Popup.js",[],"/var/www/html/manishLiveWebsite/src/services/employeeService.js",["107","108"],"const KEYS = {\n    employees:'employees',\n    employeeId:'employeeId'\n}\n\nexport const getDepartmentCollection = () =>([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    {id: '4', title: 'HR'},\n])\n\nexport function insertEmployee(data) {\n    let employees=getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function deleteEmployee(id) {\n    let employees = getAllEmployees();\n    employees = employees.filter(x => x.id != id)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId(){\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    let departments = getDepartmentCollection();\n    //This will return updated list of employee with the new property deparment.\n    return employees.map(x => ({\n        ...x,\n        department : departments[x.departmentId-1].title\n    }))\n}","/var/www/html/manishLiveWebsite/src/components/useForm.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/ActionButton.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Button.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/DatePicker.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Checkbox.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Select.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Input.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/RadioGroup.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/Notification.js",[],"/var/www/html/manishLiveWebsite/src/components/controls/ConfirmDialog.js",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":60,"column":33,"nodeType":"119","messageId":"120","endLine":60,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":69,"column":25,"nodeType":"119","messageId":"120","endLine":69,"endColumn":27},{"ruleId":"113","severity":1,"message":"121","line":2,"column":17,"nodeType":"115","messageId":"116","endLine":2,"endColumn":25},{"ruleId":"117","severity":1,"message":"122","line":38,"column":65,"nodeType":"119","messageId":"120","endLine":38,"endColumn":67},{"ruleId":"117","severity":1,"message":"118","line":42,"column":24,"nodeType":"119","messageId":"120","endLine":42,"endColumn":26},{"ruleId":"117","severity":1,"message":"118","line":43,"column":53,"nodeType":"119","messageId":"120","endLine":43,"endColumn":55},{"ruleId":"123","severity":1,"message":"124","line":67,"column":7,"nodeType":"125","endLine":67,"endColumn":22,"suggestions":"126"},{"ruleId":"113","severity":1,"message":"127","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":24},{"ruleId":"117","severity":1,"message":"122","line":88,"column":23,"nodeType":"119","messageId":"120","endLine":88,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":22,"column":53,"nodeType":"119","messageId":"120","endLine":22,"endColumn":55},{"ruleId":"117","severity":1,"message":"122","line":29,"column":44,"nodeType":"119","messageId":"120","endLine":29,"endColumn":46},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'insertEmployee' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [recordForEdit, setValues]",{"range":"133","text":"134"},[1862,1877],"[recordForEdit, setValues]"]