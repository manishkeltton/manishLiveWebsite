{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/useForm.js","components/controls/Button.js","components/controls/ActionButton.js","components/controls/Controls.js","components/controls/Input.js","components/controls/RadioGroup.js","components/controls/Select.js","components/controls/Checkbox.js","components/controls/DatePicker.js","services/employeeService.js","pages/Employees/EmployeesForm.js","components/PageHeader.js","components/controls/useTable.js","components/controls/Popup.js","pages/Employees/Employees.js","App/App.js","reportWebVitals.js","index.js"],"names":["withStyles","sideMenu","display","flexDirection","position","left","width","height","backgroundColor","props","classes","className","useStyles","makeStyles","theme","root","transform","searchInput","opacity","padding","spacing","fontSize","marginRight","Header","AppBar","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","Badge","badgeContent","color","margin","Form","other","children","autoComplete","label","textTransform","minWidth","secondary","palette","light","main","primary","Controls","Input","name","value","error","onChange","TextField","variant","helperText","RadioGroup","items","FormControl","FormLabel","row","values","map","FormControlLabel","id","control","Radio","title","Select","options","InputLabel","MenuItem","FormHelperText","Checkbox","checked","e","target","convertToDefEventPara","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","formate","date","Button","text","size","onClick","ActionButton","KEYS","insertEmployee","data","employees","getAllEmployees","localStorage","getItem","setItem","parseInt","toString","generateEmployeeId","push","JSON","stringify","parse","departments","x","department","departmentId","genderItems","initialFValues","fullName","email","mobile","city","gender","hireDate","Date","isPermanent","EmployeesForm","addOrEdit","recordForEdit","validate","fieldValues","temp","errors","test","length","setErrors","Object","every","validateOnChange","useState","setValues","handleInputChange","resetForm","useForm","useEffect","onSubmit","preventDefault","xs","type","PageHeader","marginBottom","pageIcon","pageTitle","paddingLeft","subTitle","icon","Paper","elevation","square","Card","Typography","component","table","marginTop","fontWeight","cursor","useTable","records","headCells","filterFn","pages","page","setPage","rowsPerPage","setRowsPerPage","order","setOrder","orderBy","setOrderBy","handleChangePage","event","newPage","handleChangeRowsPerPage","descendingComparator","a","b","TblContainer","Table","TblHead","TableHead","TableRow","headCell","TableCell","sortDirection","disableSorting","TableSortLabel","active","direction","cellId","TblPagination","TablePagination","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","recordsAfterPagingAndSorting","array","comparator","stabilizedThis","e1","index","sort","stableSort","fn","getComparator","slice","dialogWrapper","top","dialogTitle","paddingRight","Popup","openPopup","setOpenPopup","Dialog","open","maxWidth","paper","DialogTitle","style","flexGrow","DialogContent","dividers","pageContent","newButton","right","Employees","setRecordForEdit","employeeService","setRecords","setfilterFn","InputProps","startAdorment","InputAdornment","filter","toLowerCase","includes","startIcon","TableBody","openInPopup","employee","recordIndex","findIndex","createMuiTheme","background","default","overrides","MuiAppBar","MuiIconButton","disableRipple","appMain","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9cd30f19.chunk.js","sourcesContent":["import React from 'react'\nimport { makeStyles, withStyles } from \"@material-ui/core\";\n\n// withStyles & makeStyles\n\n// const useStyles = makeStyles({\n//     sideMenu: {\n//         display: 'flex',\n//         flexDirection: 'column',\n//         position: 'absolute',\n//         left: '0px',\n//         width: '320px',\n//         height: '100%',\n//         backgroundColor: '#253053'\n//     }\n// })\n\nconst style = {\n    sideMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'absolute',\n        left: '0px',\n        width: '320px',\n        height: '100%',\n        backgroundColor: '#253053'\n    }\n}\n\n\n\nconst SideMenu = (props) => {\n\n    const { classes } = props;\n    //const classes = useStyles();\n    //console.log(classes);\n\n    return (\n        <div className={classes.sideMenu}>\n\n        </div>\n    )\n}\n\nexport default withStyles(style)(SideMenu);","import { AppBar, Badge, Grid, IconButton, InputBase, makeStyles, Toolbar } from '@material-ui/core'\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\nimport SearchIcon from '@material-ui/icons/Search';\nimport React from 'react'\n\n\n\nconst useStyles = makeStyles(theme =>({\n    root: {\n        backgroundColor: '#fff',\n        transform:'translateZ(0)'\n    },\n    searchInput: {\n        opacity: '0.6',\n        padding: `0px ${theme.spacing(1)}px`,\n        fontSize: '0.8rem',\n        '&:hover': {\n            backgroundColor: '#f2f2f2'\n        },\n        '& .MuiSvgIcon-root': {\n            marginRight: theme.spacing(1)\n        }\n    }\n}))\n\nexport default function Header() {\n \n    const classes = useStyles();\n\n    return (\n            <AppBar position=\"static\" className={classes.root}>\n                <Toolbar>\n                    <Grid container \n                        alignItems=\"center\">\n                        <Grid item>\n                            <InputBase \n                            placeholder=\"Search topics\"\n                            className = {classes.searchInput}\n                            startAdornment={<SearchIcon fontSize=\"small\" />}\n                            />\n                        </Grid>\n                        <Grid item sm></Grid>\n                        <Grid item>\n                            <IconButton>\n                                <Badge badgeContent={4} color=\"secondary\">\n                                    <NotificationsNoneIcon fontSize=\"small\"/>\n                                </Badge>\n                            </IconButton>\n                            <IconButton>\n                                <Badge badgeContent={3} color=\"primary\">\n                                    <ChatBubbleOutlineIcon fontSize=\"small\"/>\n                                </Badge>\n                            </IconButton>\n                            <IconButton>\n                                <PowerSettingsNewIcon />\n                            </IconButton>\n                        </Grid>\n                     </Grid>\n                </Toolbar>\n            </AppBar>\n    )\n}","import React, { useState } from 'react'\nimport { makeStyles } from \"@material-ui/core\";\n\nexport function useForm(initialFValues, validateOnChange=false, validate){\n\n    const [values, setValues] = useState(initialFValues);\n    const [errors, setErrors] = useState({});\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value\n        })\n        if(validateOnChange)\n            validate({[name]:value})\n    }\n\n    const resetForm =()=>{\n        setValues(initialFValues);\n        setErrors({})\n    }\n\n    return {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    }\n}\n\nconst useStyles = makeStyles(theme =>({\n    root: {\n        '& .MuiFormControl-root': {\n            width:'80%',\n            margin:theme.spacing(1),\n        }\n    }\n}))\n\nexport function Form(props) {\n\n    const classes = useStyles();\n    const { children, ...other } = props\n\n    return (\n        <form className={classes.root} autoComplete=\"off\" {...other}>\n            {props.children}\n        </form>\n    )\n}","import React from 'react'\nimport { Button as MuiButton, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        margin:theme.spacing(0.5)\n    },\n    label: {\n        textTransform: 'none'\n    }\n}))\n\nexport default function Button(props) {\n\n    const {text, size, color, variant, onClick, ...other} = props;\n     const classes = useStyles();\n\n    return (\n\n         <MuiButton\n            variant={variant || \"contained\"}\n            size={size || \"large\"}\n            color={color || 'primary'}\n            onClick={onClick}\n            {...other}\n            classes={{ root:classes.root, label:classes.label }}>\n             {text}\n         </MuiButton>\n\n    )\n}","import { makeStyles, Button} from '@material-ui/core';\nimport React from 'react'\n\n\nconst useStyles = makeStyles(theme =>({\n      root: {\n          minWidth: 0,\n          margin: theme.spacing(0.5)\n      },\n      secondary: {\n          backgroundColor: theme.palette.secondary.light,\n          '& .MuiButton-label': {\n              color: theme.palette.secondary.main,\n          }\n      },\n      primary: {\n          backgroundColor: theme.palette.primary.light,\n          '& .MuiButton-label': {\n              color: theme.palette.main,\n          }\n      },\n}))\n\nexport default function ActionButton(props) {\n\n    const { color, children, onClick } = props;\n    const classes = useStyles();\n\n    return (\n         <Button\n           className = {`${classes.root} ${classes[color]}`}\n           onClick={onClick}\n         >\n             {children}\n         </Button>\n    )\n}","import Input from \"./Input\"\nimport RadioGroup from \"./RadioGroup\"\nimport Select from \"./Select\"\nimport Checkbox from \"./Checkbox\"\nimport DatePicker from \"./DatePicker\"\nimport Button from \"./Button\"\nimport ActionButton from \"./ActionButton\"\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    DatePicker,\n    Button,\n    ActionButton\n}\n\nexport default Controls;","import { TextField } from '@material-ui/core';\nimport React from 'react'\n\nexport default function Input(props) {\n \n    const { name, label, value, error=null, onChange, ...other } = props;\n\n    return(\n        <TextField \n            variant=\"outlined\"\n            label={label}\n            name={name}\n            value={value}\n            onChange = {onChange}\n            {...other}\n            {...(error && {error:true, helperText:error})}\n        />\n    )\n}","import { FormControl, FormControlLabel, FormLabel, Radio, RadioGroup as MuiRadioGroup } from '@material-ui/core';\nimport React from 'react'\n\nexport default function RadioGroup(props){\n\n    const {name, label, value, onChange, items} = props;\n\n    return(\n        <FormControl>\n            <FormLabel>{label}</FormLabel>\n            <MuiRadioGroup row\n                name={name}\n                values={value}\n                onChange={onChange}>\n\n                {\n                    items.map(\n                        item => (\n                            <FormControlLabel key={item.id} value={item.id} control={<Radio />} label={item.title} />\n                        )\n                    )\n                }\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}","import { FormControl, FormHelperText, InputLabel, MenuItem, Select as MuiSelect } from '@material-ui/core';\nimport React from 'react'\n\nexport default function Select(props) {\n\n    const { name, label, value, error=null, onChange, options } = props;\n\n    return(\n        <FormControl variant=\"outlined\"\n        {...(error && {error:true})}>            \n            <InputLabel>{label}</InputLabel>\n            <MuiSelect\n                label={label}\n                name={name}\n                value={value}\n                onChange={onChange}>\n                <MenuItem value=\"\">None</MenuItem>\n                {\n                    options.map(\n                        item => (<MenuItem key={item.id} value={item.id}>{item.title}</MenuItem>)\n                    )\n                }\n            </MuiSelect>\n            {error && <FormHelperText>{error}</FormHelperText>}\n        </FormControl>\n    )\n}","import { FormControl, FormControlLabel, Checkbox as MuiCheckbox } from '@material-ui/core';\nimport React from 'react'\n\nexport default function Checkbox(props) {\n    \n    const {name, label, value, onChange} = props;\n\n    const convertToDefEventPara = (name, value) => ({\n        target:{\n            name, value\n        }\n    })\n    \n    return (\n\n        <FormControl>\n            <FormControlLabel\n            control={<MuiCheckbox\n                name={name}\n                color=\"primary\"\n                checked={value}\n                onChange={ e => onChange(convertToDefEventPara(name, e.target.checked))} />}\n                label={label}\n            />\n        </FormControl>\n\n    )\n}","import DateFnsUtils from '@date-io/date-fns'\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers'\nimport React from 'react'\n\nexport default function DatePicker(props) {\n\n    const { name, label, value, onChange } = props;\n\n    const convertToDefEventPara = (name, value) => ({\n        target:{\n            name, value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker disableToolbar variant=\"inline\" inputVariant=\"outlined\" \n                label={label}\n                formate=\"MMM/dd/yyyy\"\n                name={name}\n                value={value}\n                onChange={date => onChange(convertToDefEventPara(name,date))}\n            />\n        </MuiPickersUtilsProvider>\n    )\n}","const KEYS = {\n    employees:'employees',\n    employeeId:'employeeId'\n}\n\nexport const getDepartmentCollection = () =>([\n    { id: '1', title: 'Development' },\n    { id: '2', title: 'Marketing' },\n    { id: '3', title: 'Accounting' },\n    {id: '4', title: 'HR'},\n])\n\nexport function insertEmployee(data) {\n    let employees=getAllEmployees();\n    data['id'] = generateEmployeeId()\n    employees.push(data)\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees))\n}\n\nexport function updateEmployee(data) {\n    let employees = getAllEmployees();\n    let recordIndex = employees.findIndex(x => x.id == data.id);\n    employees[recordIndex] = { ...data }\n    localStorage.setItem(KEYS.employees, JSON.stringify(employees));\n}\n\nexport function generateEmployeeId(){\n    if (localStorage.getItem(KEYS.employeeId) == null)\n        localStorage.setItem(KEYS.employeeId, '0')\n    var id = parseInt(localStorage.getItem(KEYS.employeeId))\n    localStorage.setItem(KEYS.employeeId, (++id).toString())\n    return id;\n}\n\nexport function getAllEmployees() {\n    if (localStorage.getItem(KEYS.employees) == null)\n        localStorage.setItem(KEYS.employees, JSON.stringify([]))\n    let employees = JSON.parse(localStorage.getItem(KEYS.employees));\n    let departments = getDepartmentCollection();\n    //This will return updated list of employee with the new property deparment.\n    return employees.map(x => ({\n        ...x,\n        department : departments[x.departmentId-1].title\n    }))\n}","import { Grid } from '@material-ui/core';\nimport React, { useState, useEffect } from 'react'\nimport { useForm, Form } from '../../components/useForm';\nimport Controls from '../../components/controls/Controls';\nimport * as employeeService from \"../../services/employeeService\";\n\nconst genderItems = [\n    {id:'male',title:'Male'},\n    {id:'Female',title:'Female'},\n    {id:'other',title:'other'},\n]\n\nconst initialFValues = {\n    id :0,\n    fullName:'',\n    email:'',\n    mobile:'',\n    city:'',\n    gender:'male',\n    departmentId:'',\n    hireDate:new Date(),\n    isPermanent: false,\n}\n\nexport default function EmployeesForm(props){\n\n    const {addOrEdit, recordForEdit } = props\n\n    const validate = (fieldValues = values) => {\n        let temp = {...errors}\n        if('fullName' in fieldValues)\n            temp.fullName = fieldValues.fullName?\"\":\"This field is required.\"\n        if('email' in fieldValues)\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email)?\"\":\"Email is not valid.\"\n        if('mobile' in fieldValues)\n            temp.mobile = fieldValues.mobile.length>9?\"\":\"Minimum 10 numbers required.\"\n        if('departmentId' in fieldValues)\n            temp.departmentId = fieldValues.departmentId.length != 0 ?\"\":\"This field is required.\"\n        setErrors({\n            ...temp\n        })\n        if(fieldValues == values)\n            return Object.values(temp).every(x => x == \"\")\n    }\n    \n    const {\n        values,\n        setValues,\n        errors,\n        setErrors,\n        handleInputChange,\n        resetForm\n    } = useForm(initialFValues, true, validate);\n\n    const handleSubmit = e => { \n        e.preventDefault()\n        if (validate()){\n            addOrEdit(values,resetForm);\n        }\n    }\n\n    useEffect(()=>{\n        if (recordForEdit != null)\n        setValues({\n            ...recordForEdit\n        })\n    },[recordForEdit])\n\n    return (\n        <Form onSubmit={handleSubmit}>\n            <Grid container>\n                <Grid item xs={6}>\n                    <Controls.Input\n                        name=\"fullName\"\n                        label=\"Full Name\"\n                        value={values.fullName}\n                        onChange={handleInputChange}\n                        error={errors.fullName}\n                    />\n                   <Controls.Input \n                        name=\"email\"\n                        label=\"Email\"\n                        value={values.email}\n                        onChange= {handleInputChange}\n                        error={errors.email}\n                   />\n                   <Controls.Input \n                        name=\"mobile\"\n                        label=\"Mobile\"\n                        value={values.mobile}\n                        onChange= {handleInputChange}\n                        error={errors.mobile}\n                   />\n                   <Controls.Input \n                        name=\"city\"\n                        label=\"City\"\n                        value={values.city}\n                        onChange= {handleInputChange}\n                   />\n                </Grid>\n                <Grid item xs={6}>\n                    <Controls.RadioGroup \n                        name=\"gender\"\n                        label=\"Gender\"\n                        values={values.gender}\n                        onChange={handleInputChange}\n                        items={genderItems}\n                    />\n                    <Controls.Select\n                        name=\"departmentId\"\n                        label=\"Department\"\n                        value={values.departmentId}\n                        onChange={handleInputChange}\n                        options={employeeService.getDepartmentCollection()}\n                        error={errors.departmentId}\n                    />\n\n                    <Controls.DatePicker\n                        name=\"hireDate\"\n                        label=\"Hire Date\"\n                        value={values.hireDate}\n                        onChange={handleInputChange}\n                    />\n                    <Controls.Checkbox\n                        name=\"isPermanent\"\n                        label=\"Permanent Employee\"\n                        value={values.isPermanent}\n                        onChange={handleInputChange}\n                    />\n                    <div>\n                        <Controls.Button\n                         type=\"submit\"\n                         text=\"Submit\" />\n                        <Controls.Button\n                         text=\"Reset\"\n                         color=\"default\" \n                         onClick={resetForm}/>\n                    </div>\n\n                </Grid>\n            </Grid>\n        </Form>\n    )\n}","import { Card, makeStyles, Paper, Typography } from '@material-ui/core'\nimport React from 'react'\n\nconst useStyles = makeStyles(theme =>({\n    root:{\n        backgroundColor: \"#fdfdff\"\n    },\n    PageHeader:{\n        padding:theme.spacing(4),\n        display:'flex',\n        marginBottom:theme.spacing(2)\n    },\n    pageIcon:{\n        display:'Inline-block',\n        padding:theme.spacing(2),\n        color: \"#3c44b1\"\n    },\n    pageTitle:{\n        paddingLeft:theme.spacing(4),\n        '& .MuiTypography-subtitle2':{\n            opacity:'0.6'\n        }\n    }\n\n}))\n\nexport default function PageHeader(props){\n\n    const classes = useStyles();\n    const { title, subTitle, icon}=props;\n    return (\n        <Paper elevation={0} square className={classes.root}>\n            <div className={classes.PageHeader}>\n                <Card className={classes.pageIcon}>\n                   {icon}\n                </Card>\n                <div className={classes.pageTitle}>\n                    <Typography \n                        variant=\"h6\"\n                        component=\"div\">\n                        {title}</Typography>\n                        <Typography \n                        variant=\"subtitle2\"\n                        component=\"div\">\n                        {subTitle}</Typography>\n                    \n                </div>\n            </div>\n        </Paper>\n    )\n}","import { makeStyles, Table, TableCell, TableHead, TablePagination, TableRow, TableSortLabel } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport { insertEmployee } from '../../services/employeeService'\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n        marginTop: theme.spacing(3),\n        '& thead th': {\n            fontWeight: '600',\n            color: theme.palette.primary.main,\n            backgroundColor: theme.palette.primary.light,\n        },\n        '& tbody td': {\n            fontWeight: '300',\n        },\n        '& tbody tr:hover': {\n            backgroundColor: '#fffbf2',\n            cursor: 'pointer',\n        },\n    },\n}))\n\nexport default function useTable(records,headCells,filterFn) {\n    \n    const classes = useStyles();\n\n    const pages =[5, 10, 25]\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage]=useState(pages[page])\n    const [order,setOrder]=useState()\n    const [orderBy,setOrderBy] = useState()\n\n    const TblContainer = props => (\n        <Table className={classes.table}>\n            {props.children}\n        </Table>\n    )\n\n    const TblHead = props => {\n\n        const handleSortRequest = cellId => {\n            const IsAsc = orderBy === cellId && order === \"asc\";\n            setOrder(IsAsc?'desc':'asc')\n            setOrderBy(cellId)\n        }\n\n        return (<TableHead>\n            <TableRow>\n                {headCells.map(headCell => (\n                    <TableCell key={headCell.id}\n                        sortDirection={orderBy === headCell.id ? order : false}>\n                            {headCell.disableSorting?headCell.label:\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction = {orderBy === headCell.id ? order : 'asc'}\n                            onClick = { () => {handleSortRequest(headCell.id)}}>\n                            {headCell.label}\n                        </TableSortLabel>\n                        }\n                    </TableCell>))}\n            </TableRow>\n        </TableHead>)\n    }\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage)\n    }\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value,10))\n        setPage(0)\n    }\n\n    const TblPagination = () => (<TablePagination\n        component=\"div\" \n        page={page}\n        rowsPerPageOptions={pages}\n        rowsPerPage={rowsPerPage}\n        count={records.length}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage = {handleChangeRowsPerPage}\n    />)\n\n    function stableSort(array, comparator){\n        const stabilizedThis = array.map((e1, index) => [e1, index]);\n        stabilizedThis.sort((a,b) => {\n            const order = comparator(a[0], b[0]);\n            if (order != 0) return order;\n            return a[1] - b[1];\n        });\n        return stabilizedThis.map((e1) => e1[0]);\n    }\n\n    function getComparator(order, orderBy) {\n        return order === 'dsc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n    }\n\n    function descendingComparator(a, b, orderBy) {\n        if (b[orderBy] < a[orderBy]) {\n            return -1;\n        }\n        if (b[orderBy] > a[orderBy]){\n            return 1;\n        }\n        return 0;\n    }\n\n    const recordsAfterPagingAndSorting = () => {\n        return stableSort(filterFn.fn(records),getComparator(order,orderBy))\n               .slice(page*rowsPerPage,(page+1)*rowsPerPage)\n    }\n\n    return {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    }\n}","import { Dialog, DialogContent, DialogTitle, makeStyles, Typography } from '@material-ui/core';\nimport React from 'react'\nimport Controls from './Controls';\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n    dialogWrapper : {\n        padding : theme.spacing(2),\n        position : 'absolute',\n        top: theme.spacing(5)\n    },\n    dialogTitle:{\n        paddingRight:'0px'\n    }\n}))\n\nexport default function Popup(props){\n\n    const { title, children, openPopup, setOpenPopup } = props; \n    const classes = useStyles();\n\n    return (\n        <Dialog open={openPopup} maxWidth=\"md\" className={{ paper: classes.dialogWrapper }}>\n            <DialogTitle className={classes.dialogTitle}>\n                <div style={{display: 'flex'}}>\n                    <Typography variant=\"h6\" component=\"div\" style={{flexGrow:1}}>\n                        {title}\n                    </Typography>\n                    <Controls.ActionButton\n                        color = \"secondary\"\n                        onClick={()=>{setOpenPopup(false)}}>\n                        <CloseIcon />\n                    </Controls.ActionButton>\n                </div>\n            </DialogTitle>\n            <DialogContent dividers>\n                {children}\n            </DialogContent>\n        </Dialog>\n    )\n}","import React, { useState } from 'react'\nimport EmployeesForm from './EmployeesForm';\nimport PeopleOutlineTwoToneIcon from '@material-ui/icons/PeopleOutlineTwoTone';\nimport PageHeader from '../../components/PageHeader';\nimport { InputAdornment, makeStyles, Paper, TableBody, TableCell, TableRow, Toolbar } from '@material-ui/core';\nimport useTable from '../../components/controls/useTable';\nimport * as employeeService from \"../../services/employeeService\";\nimport Controls from '../../components/controls/Controls';\nimport Search from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport Popup from '../../components/controls/Popup';\nimport EditOutlined from '@material-ui/icons/EditOutlined';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(theme =>({\n    pageContent:{\n        margin:theme.spacing(5),\n        padding:theme.spacing(3)\n    },\n    searchInput:{\n        width:'75%'\n    },\n    newButton : {\n        position:'absolute',\n        right:'10px'\n    }\n}))\n\nconst headCells = [\n    {id:'fullName',label:'Employee Name'},\n    {id:'email',label:'Email Address (personal)'},\n    {id:'mobile',label:'Mobile Number'},\n    {id:'deparment',label:'Department',disableSorting:true},\n    {id:'actions', label:'Actions',disableSorting:true}\n]\n\nexport default function Employees(){\n\n    const classes = useStyles();\n    const [recordForEdit, setRecordForEdit] = useState(null)\n    const [records,setRecords] = useState(employeeService.getAllEmployees());\n    const [filterFn, setfilterFn] = useState({ fn: items => { return items; } })\n    const [openPopup, setOpenPopup] = useState(false);\n\n    const {\n        TblContainer,\n        TblHead,\n        TblPagination,\n        recordsAfterPagingAndSorting\n    } = useTable(records,headCells,filterFn);\n\n    const handleSearch = e =>  {\n        let target = e.target;\n        setfilterFn({\n            fn: items => {\n                if(target.value == \"\")\n                    return items;\n                else \n                    return items.filter(x => x.fullName.toLowerCase().includes(target.value))\n            }\n        })\n    }\n\n    const addOrEdit = (employee, resetForm) => {\n        if (employee.id == 0)\n            employeeService.insertEmployee(employee)\n        else\n            employeeService.updateEmployee(employee)\n            resetForm()\n            setRecordForEdit(null)\n            setOpenPopup(false)\n            setRecords(employeeService.getAllEmployees())\n    }\n\n    const openInPopup = item => {\n        setRecordForEdit(item)\n        setOpenPopup(true)\n    }\n\n    return (\n    <>\n        <PageHeader \n        title=\"New Employee\"\n        subTitle=\"Form design with validation\"\n        icon = {<PeopleOutlineTwoToneIcon fontSize='large'/>}\n        />\n        <Paper className={classes.pageContent}>\n        <Toolbar>\n            <Controls.Input\n                label=\"Search Employees\"\n                className = {classes.searchInput} \n                InputProps={{\n                    startAdorment: (<InputAdornment position=\"start\">\n                        <Search />\n                    </InputAdornment>)\n               }}\n               onChange={ handleSearch }\n            />\n            <Controls.Button \n                text = \"Add New\"\n                variant = \"outlined\"\n                className = {classes.newButton}\n                startIcon = {<AddIcon />}\n                onClick = {() => { setOpenPopup(true); setRecordForEdit(null);}}\n            />\n        </Toolbar>\n        <TblContainer>\n            <TblHead />\n            <TableBody>\n                {\n                    recordsAfterPagingAndSorting().map(item =>\n                        (<TableRow key={item.id}>\n                            <TableCell>{item.fullName}</TableCell>\n                            <TableCell>{item.email}</TableCell>\n                            <TableCell>{item.mobile}</TableCell>\n                            <TableCell>{item.department}</TableCell>\n                            <TableCell>\n                                <Controls.ActionButton\n                                    color=\"primary\"\n                                    onClick = {() => {openInPopup(item)}}>\n                                      <EditOutlined fontSize=\"small\" />\n                                </Controls.ActionButton>\n                                <Controls.ActionButton\n                                    color=\"secondary\">\n                                      <CloseIcon fontSize=\"small\" />\n                                </Controls.ActionButton>\n                            </TableCell>\n                        </TableRow>)\n                        )\n                }\n            </TableBody>\n        </TblContainer>\n        <TblPagination />\n        </Paper>\n        <Popup\n            title = \"Employee Form\"\n            openPopup = {openPopup}\n            setOpenPopup = {setOpenPopup}\n        >\n        <EmployeesForm \n            recordForEdit={recordForEdit}\n            addOrEdit={addOrEdit}/>\n        </Popup>\n    </>\n    )\n}","import './App.css';\nimport SideMenu from '../components/SideMenu';\nimport { createMuiTheme, CssBaseline, makeStyles, ThemeProvider} from '@material-ui/core';\nimport Header from '../components/Header';\nimport Employees from '../pages/Employees/Employees';\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#333996\",\n      light: \"#3c44b126\"\n    },\n    secondary: {\n      main: \"#f83245\",\n      light: \"#f8324526\"\n    },\n    background: {\n      default: \"#f4f5fd\"\n    }\n  },\n  overrides:{\n    MuiAppBar:{\n      root:{\n        transform:'translateZ(0)'\n      }\n    }\n  },\n  props:{\n    MuiIconButton:{\n      disableRipple:true\n    }\n  }\n})\n\nconst useStyles = makeStyles({\n  appMain:{\n    paddingLeft: '320px',\n    width: '100%'\n  }\n})\n\nfunction App() {\n\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SideMenu />\n      <div className={classes.appMain}>\n          <Header />\n          <Employees />\n      </div>\n      <CssBaseline />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}